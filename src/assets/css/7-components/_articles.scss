@use '../2-design-tokens/index' as *;
@use '../6-skeleton/grid' as *;

.articles__container {
  @include horizontalContainer;
  @include verticalPadding;
}

.articles__grid {
  @include grid;
  @include colGap(calc($gtr * 2));
  @include rowGap(calc($gtr * 2));
}

.article__item {
  display: block;
  position: relative; // Ensure the card acts as a container for absolute elements
  @include col(6);
  border: $border;
  border-radius: 5%;
  transition: all 500ms;
  overflow: hidden;

  // Ensure the card has height
  height: auto; // Maintain natural height based on the image

  &:hover,
  &:active {
    border-radius: 8%;
  }

  &:hover .article__overlay {
    opacity: 1; // Show the overlay on hover
    visibility: visible; // Prevent it from collapsing when hidden
  }

  &:hover .article__button {
    opacity: 1; // Show the button on hover
    visibility: visible;
  }
}

.article__overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5); // Semi-transparent overlay
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0; // Hidden by default
  visibility: hidden; // Prevent collapsing when hidden
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;

  // Ensure the overlay spans the full height of the card
  width: 100%;
  height: 100%;
}

.article__overlay img {
  width: 100%;
  height: auto; // Maintain aspect ratio
  display: block; // Ensure proper rendering
}

.article__button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10; // Ensure button is above the overlay
  opacity: 0; // Hidden by default
  visibility: hidden; // Prevent collapsing when hidden
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
}
